#######################
### Crane Commander ###
#######################

<match cranecommander.**>
  type rewrite_tag_filter
  rewriterule1  log  ^\s\*\s  info.${tag}
  rewriterule2  log  ^\b(\d{1,3}\.){3}\d{1,3}\b\s-\s-  log.${tag}
  rewriterule3  log  ^----------------(-*)  clear
  rewriterule4  log  .*  error.${tag}
</match>

<filter log.cranecommander.**>
  type record_transformer
  enable_ruby
  <record>
    level info
    ip ${%r[(\b(\d{1,3}\.){3}\d{1,3}\b)(?:\s-\s-)].match(log)[1]}
    msg ${%r[(?:")((\w|\s|\!|\#|\$|\%|\&|\'|\(|\)|\*|\+|\,|\-|\.|\/|\:|\;|\<|\=|\>|\?|\@|\[|\\|\]|\^|\`|\'|\{|\|\||\}|\~)*)(?:")].match(log)[1]}
    method ${%r[(?:")(\w*)].match(log)[1]}
    httpversion ${%r[(?:HTTP\/)((\d|\.)*)].match(log)[1]}
    resource ${%r[(?:"\w*\s)((\w|\!|\#|\$|\%|\&|\'|\(|\)|\*|\+|\,|\-|\.|\/|\:|\;|\<|\=|\>|\?|\@|\[|\\|\]|\^|\`|\'|\{|\|\||\}|\~)*)].match(log)[1]}
    code ${%r[(?:\s)(\d*)(?:\s-)].match(log)[1]}
  </record>
</filter>
<match log.cranecommander.**>
  type retag
  remove_prefix log
  add_prefix cloudopting
</match>

<filter info.cranecommander.**>
  type record_transformer
  enable_ruby
  <record>
    level info
    msg ${%r[(?:^\s\*\s)(.*)].match(log)[1]}
  </record>
</filter>
<match info.cranecommander.**>
  type retag
  remove_prefix info
  add_prefix cloudopting
</match>

<filter error.cranecommander.**>
  type record_transformer
  enable_ruby
  <record>
    level error
    msg ${%r[(.*)].match(log)[1]}
  </record>
</filter>
<match error.cranecommander.**>
  type retag
  remove_prefix error
  add_prefix cloudopting
</match>

<match clear>
  type null
</match>

<match cloudopting.cranecommander.**>
  type copy
  <store>
    type elasticsearch
    host localhost
    port 9200
    include_tag_key true
    tag_key @log_name
    logstash_format true
    logstash_prefix "fluentd"
    flush_interval 10s
  </store>
</match>
